
name: Container build and push
on:
  push:
    branches:
      - main
    paths:
      - "containers/**"
      - ".github/workflows/containers-apply.yml"

env: 
  AWS_REGION: ca-central-1
  REGISTRY: ${{ vars.PROD_AWS_ACCOUNT_ID }}.dkr.ecr.ca-central-1.amazonaws.com/superset
  GITHUB_SHA: ${{ github.sha }}

permissions:
  id-token: write
  contents: write
  
jobs:
  docker-push:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Audit DNS requests
      uses: cds-snc/dns-proxy-action@main
      env:
        DNS_PROXY_FORWARDTOSENTINEL: "true"
        DNS_PROXY_LOGANALYTICSWORKSPACEID: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
        DNS_PROXY_LOGANALYTICSSHAREDKEY: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    # TODO: Replace with a locked down IAM role
    - name: configure aws credentials using OIDC
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
      with:
        role-to-assume: arn:aws:iam::${{ vars.PROD_AWS_ACCOUNT_ID }}:role/cds-superset-apply 
        role-session-name: PushContainer
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1 
  
    - name: Build container
      working-directory: ./
      run: |
        docker build \
        --file ./containers/Dockerfile \
        --tag $REGISTRY:sha-$GITHUB_SHA \
        --tag $REGISTRY:latest ./containers

    - name: Push Container to Amazon ECR
      run: |
        docker push $REGISTRY:sha-$GITHUB_SHA
        docker push $REGISTRY:latest

    - name: Docker generate SBOM
      uses: cds-snc/security-tools/.github/actions/generate-sbom@598deeaed48ab3bb0df85f0ed124ba53f0ade385 # v3.1.0
      with:
        docker_image: "${{ env.REGISTRY }}:latest"
        dockerfile_path: "./Dockerfile"
        sbom_name: "sre-bot"
        token: "${{ secrets.GITHUB_TOKEN }}"