name: Docker build and push Production

on:
  release:
    types:
    - published

env: 
  AWS_REGION: ca-central-1
  REGISTRY: ${{ vars.PROD_AWS_ACCOUNT_ID }}.dkr.ecr.ca-central-1.amazonaws.com/superset
  TAG_VERSION: ${{ github.ref_name }}

permissions:
  id-token: write
  contents: write
  
jobs:
  docker-push:
    runs-on: ubuntu-latest
    steps:
    - name: Audit DNS requests
      uses: cds-snc/dns-proxy-action@main
      env:
        DNS_PROXY_FORWARDTOSENTINEL: "true"
        DNS_PROXY_LOGANALYTICSWORKSPACEID: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
        DNS_PROXY_LOGANALYTICSSHAREDKEY: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}

    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    # TODO: Replace with a locked down IAM role
    - name: configure aws credentials using OIDC
      uses: aws-actions/configure-aws-credentials@4fc4975a852c8cd99761e2de1f4ba73402e44dd9 # v4.0.3
      with:
        role-to-assume: arn:aws:iam::${{ vars.PROD_AWS_ACCOUNT_ID }}:role/cds-superset-release 
        role-session-name: PushContainer
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1 
  
    - name: Build container
      working-directory: ./
      run: |
        docker build \
        --file ./docker/Dockerfile \
        --tag $REGISTRY:${{ env.TAG_VERSION }} \
        --tag $REGISTRY:latest ./docker

    - name: Push Container to Amazon ECR
      run: |
        docker push $REGISTRY:${{ env.TAG_VERSION }}
        docker push $REGISTRY:latest
