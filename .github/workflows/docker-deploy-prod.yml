name: Docker deploy Production

on:
  workflow_run:
    workflows: ["Docker build and push Production"]
    types:
    - completed

env: 
  AWS_REGION: ca-central-1
  ECS_CLUSTER: superset
  REGISTRY: ${{ vars.PROD_AWS_ACCOUNT_ID }}.dkr.ecr.ca-central-1.amazonaws.com/superset
  GITHUB_SHA: ${{ github.event.workflow_run.head_branch }}

permissions:
  id-token: write

jobs:
  docker-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - superset
          - celery-worker
          - celery-beat
    steps:
    - name: Audit DNS requests
      uses: cds-snc/dns-proxy-action@50d3033adea55c246f2e314920759cd81ecae522
      env:
        DNS_PROXY_FORWARDTOSENTINEL: "true"
        DNS_PROXY_LOGANALYTICSWORKSPACEID: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
        DNS_PROXY_LOGANALYTICSSHAREDKEY: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}

    # TODO: Replace with a locked down IAM role
    - name: configure aws credentials using OIDC
      uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
      with:
        role-to-assume: arn:aws:iam::${{ vars.PROD_AWS_ACCOUNT_ID }}:role/cds-superset-apply 
        role-session-name: DeployContainer
        aws-region: ${{ env.AWS_REGION }}

    - name: Download ECS task definition
      run: |
        aws ecs describe-task-definition \
          --task-definition ${{ matrix.service }} \
          --query taskDefinition > task-definition.json

    - name: Update ECS task image
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@acd72bc11233ac43bac45ddb7b8e54ada737e6cd # v1.7.4
      with:
        task-definition: task-definition.json
        container-name: ${{ matrix.service }}
        image: ${{ env.REGISTRY }}:${{ github.event.workflow_run.head_branch }}

    - name: Deploy updated ECS task
      uses: aws-actions/amazon-ecs-deploy-task-definition@4b08990e8909cf36bc2ca95f994312f090c41865 # v2.3.4
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ matrix.service }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
        propagate-tags: SERVICE

    - name: Checkout
      if: ${{ matrix.service == 'superset' }}
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Run Superset database upgrade
      if: ${{ matrix.service == 'superset' }}
      run: |
        .github/workflows/scripts/run-superset-upgrade.sh \
          "${{ env.ECS_CLUSTER }}" \
          "${{ secrets.PROD_SUPERSET_PRIVATE_SUBNET_IDS }}" \
          "${{ secrets.PROD_SUPERSET_ECS_TASK_SECURITY_GROUP_ID }}"
